#

# -------------------------------------------------------------------------- #

# DISCLAIMER:       This file is part of LOGIK-PROJEKT.
#                   Copyright Â© 2024 man-made-mekanyzms
                
#                   LOGIK-PROJEKT creates directories, files, scripts & tools
#                   for use with Autodesk Flame and other software.

#                   LOGIK-PROJEKT is free software.

#                   You can redistribute it and/or modify it under the terms
#                   of the GNU General Public License as published by the
#                   Free Software Foundation, either version 3 of the License,
#                   or any later version.
 
#                   This program is distributed in the hope that it will be
#                   useful, but WITHOUT ANY WARRANTY; without even the
#                   implied warranty of MERCHANTABILITY or FITNESS FOR A
#                   PARTICULAR PURPOSE.

#                   See the GNU General Public License for more details.

#                   You should have received a copy of the GNU General
#                   Public License along with this program.

#                   If not, see <https://www.gnu.org/licenses/>.
                
#                   Contact: phil_man@mac.com

# -------------------------------------------------------------------------- #

# File Name:        nuke
# Version:          0.0.2
# Created:          2024-10-25
# Modified:         2024-11-07

# ========================================================================== #
# This section creates a decorative separator for blocks of text.
# ========================================================================== #

# Define a variable called 'separator'.
# That starts and ends with '+', and 75 '-' characters in between.
separator=$(printf '+ %s +' "$(printf -- '-%.0s' {1..75})")

# Define a variable called 'separator_hash'.
# That starts and ends with '#', and 75 '-' characters in between.
separator_hash=$(printf '# %s #' "$(printf -- '-%.0s' {1..74})")

# Print a separator to the shell
echo -e "\n$separator_hash\n"
# echo -e "\n$separator_hash\n"  # -e option may be unnecessary


# ========================================================================== #

# Print a message to the shell
echo "setting up Nuke environment... $PROJEKT_NAME"

# ========================================================================== #
# This section sets the NUKE_PATH.
# ========================================================================== #

export NUKE_PATH=$PROJEKT_PIPELINE_ROOT/nuke

# ========================================================================== #
# This section reads the nuke version from ./software/etc
# ========================================================================== #

export nuke_version=$(cat $PROJEKT_PIPELINE_ROOT/etc/nuke_version)

# -------------------------------------------------------------------------- #

# Assemble the major minor string (ie. 15.0, 14.1 )
nuke_major_minor=$(echo $nuke_version | sed 's/\([0-9]*.[0-9]*\).*/\1/')

# -------------------------------------------------------------------------- #

# Assemble Nuke executible name (ie. Nuke15.0, Nuke13.2 )
nuke_command="Nuke$nuke_major_minor"

# -------------------------------------------------------------------------- #

# ========================================================================== #
# This section sets the OCIO environment variable for ACES 1.3 based of the VFX Reference Platform.
# ========================================================================== #

# Determine corect ocio/VFXRP folder by nuke version
if [[ "$nuke_major_minor" == "14.0" || "$nuke_major_minor" == "14.1" ]]; then
    folder="CY2022-2.1.x"
elif [[ "$nuke_major_minor" == "15.0" || "$nuke_major_minor" == "15.1" ]]; then
    folder="CY2023-2.2.x"
else
    echo "Unsupported Nuke version: $nuke_major_minor"
    exit 1
fi

# ========================================================================== #
# This section selects the ocio config file based on the config_type.
# ========================================================================== #

# Set the config_type. This string searches for the correct config file.
# options are: 'studio' 'cg' or 'custom'. Setting to 'nuke' will unset the OCIO variable.

# -------------------------------------------------------------------------- #
# aces 1.3
# config_type="cg" 
# config_type="studio"
# config_type="custom"

# -------------------------------------------------------------------------- #
# aces_1.2
config_type="aces_1.2"

# -------------------------------------------------------------------------- #

# Determine the config file pattern based on the config_type
if [[ "$config_type" == "studio" ]]; then
    config_pattern="studio-config"
    echo "Using Studio config"
elif [[ "$config_type" == "cg" ]]; then
    config_pattern="cg-config"
    echo "Using CG config"
elif [[ "$config_type" == "custom" ]]; then
    config_pattern="custom"
    echo "Using Custom config"
elif [[ "$config_type" == "nuke" ]]; then
    echo "Using Nuke config"
elif [[ "$config_type" == "aces_1.2" ]]; then
    echo "Using ACES 1.2 config"
else
    echo "Unsupported config type: $config_type"
    exit 1
fi

# -------------------------------------------------------------------------- #
# if config_type is 'aces_1.2' set the OCIO environment variable to ocio/aces_1.2/config.ocio, else

if [[ "$config_type" == "aces_1.2" ]]; then
    export OCIO="$PROJEKT_PIPELINE_ROOT/ocio/aces_1.2/config.ocio"
    echo "OCIO: $OCIO"
    echo
    echo "# -------------------------------------------------------------------------- #"
    echo
    
fi

if [[ "$config_type" != "aces_1.2" ]]; then
    # Search for the config file in the determined folder
    directory="$PROJEKT_PIPELINE_ROOT/ocio/$folder"
    config_file=$(find "$directory" -type f -name "*$config_pattern*.ocio" | head -n 1)

    # Check if the config file was found
    if [[ -z "$config_file" ]]; then
        echo "Config file not found for pattern: $config_pattern in folder: $directory"
        exit 1
    else
        export OCIO="$config_file"
        echo "OCIO: $OCIO"
    fi
fi



# ========================================================================== #
# This section sets the OCIO environment variable.
# ========================================================================== #
# echo $config_file
# if [[ "$config_file" != "nuke" ]]; then
#     export OCIO="$config_file"
# else
#     export -n OCIO
# fi


# ========================================================================== #
# This section finds the default Nuke install path according to the OS.
# ========================================================================== #

# path to the default Nuke installs
if [[ $PROJEKT_OS == "mac" ]]; 
then 
    export nuke_root=/Applications/Nuke$nuke_version/Nuke$nuke_version.app/Contents/MacOS

fi

if [[ $PROJEKT_OS == "lin" ]]; 
then 

    # server
    export PROJEKT_APPS=/s84/apps
    export NUKE_FONT_PATH=$PROJEKT_APPS/NUKE/fonts #fonts
    export nuke_root=$PROJEKT_APPS/NUKE/Nuke$nuke_version

    # local
    # export nuke_root=/usr/local/Nuke$nuke_version

    #check if app dir exists:
    # if [ -d "$DIRECTORY" ]; then
    #     echo "$DIRECTORY does exist."
    # fi

fi

# ========================================================================== #
# This section sets additional environment variables for Nuke plugins.
# ========================================================================== #

#export OPTICAL_FLARES_PATH=/opt/nuke_plugs/OpticalFlares
#export OPTICAL_FLARES_PRESET_PATH=/opt/nuke_plugs/OpticalFlares/Textures-And-Presets
#export OPTICAL_FLARES_DISPLAY_NAME=:1


# -------------------------------------------------------------------------- #
# Enable debug logging for troubleshooting performance bottlenecks (use temporarily)

# export NUKE_PERF_LOG=1
# export NUKE_PERF_TIMING=1

# -------------------------------------------------------------------------- #
# The 'import nuke' function checks-out a nuke_r render license by default. 
# To use an interactive license, set this environment variable to 1.

# export NUKE_INTERACTIVE = 1 


# -------------------------------------------------------------------------- #

# NUKE_LOCALIZATION_NUMWATCHERS


# ========================================================================== #
# This section displays information in the shell.
# ========================================================================== #

# echo 
# echo "# -------------------------------------------------------------------------- #"
echo -e "\n$separator_hash\n"
echo "  NUKE ENVIRONMENT"
echo -e "\n$separator_hash\n"
# echo "# -------------------------------------------------------------------------- #"

echo "nuke_version:     "$nuke_version
echo "nuke_major_minor: "$nuke_major_minor
echo
echo "OCIO:             "$OCIO
echo "NUKE_PATH:        "$NUKE_PATH
echo "HIERO_PLUGIN_PATH:"$HIERO_PLUGIN_PATH
echo "nuke_version:     "$nuke_version
echo "nuke app string:  "$nuke_root/$nuke_command
echo "os:               "$PROJEKT_OS
echo

echo "nuke_root:        "$nuke_root
echo "nuke_command:     "$nuke_command

echo -e "\n$separator_hash\n"


# ========================================================================== #
# This section runs Nuke.
# ========================================================================== #


# $nuke_root/$nuke_command -nukex $@
$nuke_root/$nuke_command $@



